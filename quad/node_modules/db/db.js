const pg = require('pg');
const config = require('config');
const log = require('log');
const fs = require('fs');

const dbVersion = 2;

class Database {
    #pool;
    #backend;
    
    async init(prepareDatabase) {
        //Require i18n here otherwise we'll have a circular dependency
        const t = require("i18n").t;
        
        // retrieve the desired backend configuration
        const backend = config.get('database.backend')

        log(`Initializing ${backend} backend...`)

        // attempt to load the backend.
        this.#backend = require(`./backends/${backend}`)
        return this.#backend.init(prepareDatabase, config.get('database.options'))
    }

    async getGuildLogs(guildId) {
        return await this.#backend.findGuildLogs(guildId)
    }

    async getGuildPrefix(guildId) {
        return await this.#backend.findGuildPrefix(guildId)
    }

    async getLocale(discordId) {
        return await this.#backend.getLocale(discordId)
    }

    async pushPin(author, channel, message) {
        return await this.#backend.insertPin(author, channel, message)
    }

    async getPins(author, category, page, pageSize, sortAscending) {
        return await this.#backend.getPins(author, category, page, pageSize, sortAscending)
    }

    async setLocale(user, locale) {
        return await this.#backend.setLocale(user, locale)
    }
}

let d = new Database();
module.exports = d;
